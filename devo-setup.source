# This file must be sourced by the shell

# It exposes one "public" function: devo-setup and a few others "private"
# functions to be used in overlay definitions.

if [ -z "$DEVO_OVERLAY_DIR" ] ; then
    DEVO_OVERLAY_DIR=$HOME/.config/devo
fi

# Prepend $1 to common environment variables
_devo_prepend_prefix() {
    local prefix=$1
    export PKG_CONFIG_PATH=$prefix/lib/pkgconfig:$PKG_CONFIG_PATH
    export LD_LIBRARY_PATH=$prefix/lib:$LD_LIBRARY_PATH
    export CMAKE_PREFIX_PATH=$prefix:$CMAKE_PREFIX_PATH
    export PATH=$prefix/bin:$PATH
    export PYTHONPATH=$prefix/site-packages:$PYTHONPATH
}

# Reset common environment variables
_devo_reset() {
    unset KDEHOME
    unset XDG_DATA_HOME
    unset XDG_CACHE_HOME
    unset XDG_CONFIG_HOME

    unset KDEVARTMP
    unset KDETMP

    unset XDG_DATA_DIRS
    unset XDG_CONFIG_DIRS

    unset LD_LIBRARY_PATH
    unset KDEDIR
    unset KDEDIRS
    unset QTDIR
    unset QT_PLUGIN_PATH
    unset PKG_CONFIG_PATH
    unset CMAKE_PREFIX_PATH
    unset QML_IMPORT_PATH
    unset PYTHONPATH

    local name
    env | awk -F= '$1 ~ "^DEVO_" && $1 != "DEVO_OVERLAY_DIR" { print $1 }' | while read name ; do
        unset $name
    done
}

devo_setup() {
    _devo_reset
    DEVO_NAME=$1
    local overlay=$DEVO_OVERLAY_DIR/$DEVO_NAME
    if [ ! -e $overlay ] ; then
        echo "ERROR: No overlay named $DEVO_NAME" 1>&2
        unset DEVO_NAME
        return 1
    fi
    if [ -e $DEVO_OVERLAY_DIR/_base ] ; then
        . $DEVO_OVERLAY_DIR/_base
    fi
    export DEVO_NAME
    . $DEVO_OVERLAY_DIR/$DEVO_NAME
    [ -n "$DEVO_PREFIX" ] || echo "WARNING DEVO_PREFIX not set"
    [ -n "$DEVO_BUILD_BASE_DIR" ] || echo "WARNING DEVO_BUILD_BASE_DIR not set"
}
